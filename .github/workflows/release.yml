# MIT License
#
# Copyright (c) 2022 EASE lab, University of Edinburgh
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# Authors: David Schall

name: Release

on:
  workflow_dispatch:

  # For all pushed tags
  push:
    tags:
      - 'v*'



env:
  ARTIFACTS_DIR: ${{ github.workspace }}/artifacts/
  KERNEL: ${{ github.workspace }}/artifacts/kernel
  DISK: ${{ github.workspace }}/artifacts/disk-image.qcow2
  TEST_CLIENT: ${{ github.workspace }}/artifacts/test-client

jobs:

  ## Prepare the release
  # Create ID
  prepare-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.VERSION }}
      rel_id:  ${{ steps.create_release.outputs.id }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Get the version
        id: version
        working-directory: resources
        run: make release-version


      ## Create the release
      - name: Create Release
        uses: softprops/action-gh-release@v2
        id: create_release
        with:
          draft: false
          prerelease: true
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          # body_path: CHANGELOG.md
          token: ${{ github.token }}
        # env:
        #   GITHUB_TOKEN: ${{ github.token }}




  ### Release Kernel Artifact ----------------------------
  upload-kernel:
    runs-on: ubuntu-latest
    needs: prepare-release
    strategy:
      fail-fast: false
      matrix:
        os: [ focal, jammy ]
        arch : [ amd64, arm64 ]
        include:
          - workflow: build_kernel.yml
          - file: kernel
    env:
      GITHUB_TOKEN: ${{ github.token }}
      RELEASE_ID: ${{ needs.prepare-release.outputs.rel_id }}


    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Download latest Kernel
        uses: dawidd6/action-download-artifact@v7
        with:
          workflow: ${{ matrix.workflow }}
          name: vmlinux-${{ matrix.os }}-${{ matrix.arch }}
          path: tmp

      - name: Upload Artifact
        run: |
          ./resources/artifacts.sh upload \
                         tmp/${{ matrix.file }} \
                         vmlinux-${{ matrix.os }}-${{ matrix.arch }}




  ### Release Test-client Artifact ----------------------------
  upload-test-client:
    runs-on: ubuntu-latest
    needs: prepare-release
    strategy:
      fail-fast: false
      matrix:
        arch : [ amd64, arm64 ]
        include:
          - workflow: test_client.yml
          - file: test-client
          - prefix: test-client
    env:
      GITHUB_TOKEN: ${{ github.token }}
      RELEASE_ID: ${{ needs.prepare-release.outputs.rel_id }}


    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Download latest kernel
        uses: dawidd6/action-download-artifact@v7
        with:
          workflow: ${{ matrix.workflow }}
          name: test-client-${{ matrix.arch }}
          path: tmp

      - name: Upload Artifact
        run: |
          ./resources/artifacts.sh upload \
                         tmp/${{ matrix.file }} \
                         test-client-${{ matrix.arch }}




  ### Release Disk image Artifact ----------------------------
  upload-disk-image:
    # runs-on: ubuntu-latest
    runs-on: [self-hosted, vswarm-u-build, X64 ]
    needs: prepare-release
    strategy:
      fail-fast: false
      matrix:
        os: [ focal, jammy ]
        arch : [ amd64, arm64 ]
        include:
          - arch: amd64
            workflow: create_base_disk_self_hosted.yml
          - arch: arm64
            workflow: create_base_disk_self_hosted_arm.yml
    env:
      GITHUB_TOKEN: ${{ github.token }}
      RELEASE_ID: ${{ needs.prepare-release.outputs.rel_id }}


    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
                      rename file \
                      curl jq pigz

      - name: Download latest disk image
        timeout-minutes: 10
        uses: dawidd6/action-download-artifact@v7
        with:
          workflow: ${{ matrix.workflow }}
          name: disk-image-${{ matrix.os }}-${{ matrix.arch }}
          path: tmp

      # During the asset creation the disk was already splitted and compressed
      # The disk will be in the temp folder. Refer to the workflow itself.
      - name: Upload Artifact
        run: |
          rename 's/disk-image/disk-image-${{ matrix.os }}-${{ matrix.arch }}/' tmp/*
          ./resources/artifacts.sh upload-files-in-dir \
                         tmp/ \
                         disk-image-${{ matrix.os }}-${{ matrix.arch }}.qcow2





      # - name: Download latest base image x86 focal
      #   uses: dawidd6/action-download-artifact@v7
      #   with:
      #     # workflow: create_base_image.yml
      #     workflow: create_base_disk_self_hosted.yml
      #     name: disk-image-focal-amd64
      #     workflow_conclusion: success
      #     # run_id: 2516383957
      #     path: disktmp

      # - name: Compress disk
      #   run: |
      #     cp temp/disk-image.qcow2 ${{ env.ARTIFACTS_DIR }}/disk-image-focal-amd64.qcow2


      # - name: Download latest base image (arm)
      #   uses: dawidd6/action-download-artifact@v7
      #   with:
      #     # workflow: create_base_image.yml
      #     workflow: create_base_disk_self_hosted_arm.yml
      #     # name: disk-image-amd64
      #     workflow_conclusion: success
      #     # run_id: 2516383957
      #     path: disktmp


      # - name: Copy Artifacts
      #   run: |
      #     mkdir -p ${{ env.ARTIFACTS_DIR }}
      #     cp tmp/kernel ${{ env.KERNEL }}
      #     cp tmp/test-client ${{ env.TEST_CLIENT }}
      #     ./resources/artifacts.sh decompress-split disktmp/disk-image.qcow2
      #     cp temp/disk-image.qcow2 ${{ env.DISK }}


