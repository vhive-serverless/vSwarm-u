# MIT License
#
# Copyright (c) 2022 David Schall and EASE Lab
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: Build Gem5

env:
  WORKDIR: setup/
  MAKEFILE: setup/gem5.Makefile

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    - cron: "0 7 * * 1"

  push:
    branches: [main]
    paths:
      - "setup/gem5.Makefile"

  pull_request:
    branches: [main]
    paths:
      - "setup/gem5.Makefile"


jobs:
  build-x86-64:
    name: Build Gem5 for x86
    # Building the kernel works also on the github runners.
    # However, they only offer building on one core therefor it take a while
    # Using self hosted is faster
    runs-on: ubuntu-24.04
    # runs-on: [self-hosted, gem5-build]
    strategy:
      fail-fast: true

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install dependencies
        shell: bash
        run: |
          make -f ${{ env.MAKEFILE }} dep_install

      - name: Build gem5
        shell: bash
        run: |
          make -f ${{ env.MAKEFILE }} all
